function add(x,y){if(y===void 0){return c=>add(x,c);}return x+y;}function curry(f,a=[]){return(...p)=>(o=>o.length>=f.length?f(...o):curry(f,o))([...a,...p]);}function adjustRaw(d,e,g){const h=g.concat();return h.map((j,k)=>{if(k===e){return d(g[e]);}return j;});}const l=curry(adjustRaw);function filterObject(m,n){const q={};for(const r in n){if(m(n[r],r)){q[r]=n[r];}}return q;}function filter(s,t){if(arguments.length===1){return u=>filter(s,u);}if(t===void 0){return[];}if(!Array.isArray(t)){return filterObject(s,t);}let v=-1,w=0;const z=t.length,A=[];while(++v<z){const B=t[v];if(s(B,v)){A[w++]=B;}}return A;}function all(C,D){if(arguments.length===1){return E=>all(C,E);}return filter(C,D).length===D.length;}function any(G,H){if(arguments.length===1){return I=>any(G,I);}let J=0;while(J<H.length){if(G(H[J],J)){return!0;}J++;}return!1;}function allPass(K,x){if(arguments.length===1){return L=>allPass(K,L);}return!any(M=>!M(x),K);}function always(x){return()=>x;}function anyPass(N,x){if(arguments.length===1){return O=>anyPass(N,O);}return any(P=>P(x))(N);}function append(x,Q){if(arguments.length===1){return R=>append(x,R);}if(typeof Q==='string')return`${Q}${x}`;const S=Q.concat();S.push(x);return S;}function assocRaw(U,V,W){return Object.assign({},W,{[U]:V});}const X=curry(assocRaw);function both(x,y){if(arguments.length===1){return Y=>both(x,Y);}return Z=>x(Z)&&y(Z);}function complement(fn){return b1=>!fn(b1);}function compose(...fns){return(...args)=>{const c1=fns.slice();if(c1.length>0){const fn=c1.pop();let e1=fn(...args);while(c1.length>0){e1=c1.pop()(e1);}return e1;}return void 0;};}function concat(x,y){if(arguments.length===1){return f1=>concat(x,f1);}return typeof x==='string'?`${x}${y}`:[...x,...y];}function type(a){const g1=typeof a;if(a===null){return'Null';}else if(a===void 0){return'Undefined';}else if(g1==='boolean'){return'Boolean';}else if(g1==='number'){return'Number';}else if(g1==='string'){return'String';}else if(Array.isArray(a)){return'Array';}else if(a instanceof RegExp){return'RegExp';}const h1=a.toString();if(h1.startsWith('async')){return'Async';}else if(h1==='[object Promise]'){return'Promise';}else if(h1.includes('function')||h1.includes('=>')){return'Function';}return'Object';}function equals(a,b){if(arguments.length===1){return i1=>equals(a,i1);}if(a===b){return!0;}const j1=type(a);if(j1!==type(b)){return!1;}if(j1==='Array'){const k1=Array.from(a),l1=Array.from(b);if(k1.toString()!==l1.toString()){return!1;}let m1=!0;k1.forEach((n1,o1)=>{if(m1){if(n1!==l1[o1]&&!equals(n1,l1[o1])){m1=!1;}}});return m1;}if(j1==='Object'){const p1=Object.keys(a);if(p1.length!==Object.keys(b).length){return!1;}let q1=!0;p1.forEach(r1=>{if(q1){const s1=a[r1],t1=b[r1];if(s1!==t1&&!equals(s1,t1)){q1=!1;}}});return q1;}return!1;}function contains(x,u1){if(arguments.length===1){return v1=>contains(x,v1);}let w1=-1,x1=!1;while(++w1<u1.length&&!x1){if(equals(u1[w1],x)){x1=!0;}}return x1;}const dec=x=>x-1;function flagIs(y1){return y1==null||y1!==y1;}function defaultTo(z1,...inputArgument){if(arguments.length===1){return A1=>defaultTo(z1,A1);}if(arguments.length===2){return flagIs(inputArgument[0])?z1:inputArgument[0];}const B1=inputArgument.length-1;let C1=B1+1,D1=!1,E1;while(!D1){const F1=inputArgument[B1-C1+1];if(C1===0){D1=!0;}else if(flagIs(F1)){C1=C1-1;}else{E1=F1;D1=!0;}}return E1===void 0?z1:E1;}function dissoc(G1,H1){if(arguments.length===1){return I1=>dissoc(G1,I1);}if(H1===null||H1===void 0){return{};}const J1={};for(const p in H1){J1[p]=H1[p];}delete J1[G1];return J1;}function divide(x,y){if(arguments.length===1){return K1=>divide(x,K1);}return x/y;}function drop(L1,x){if(arguments.length===1){return M1=>drop(L1,M1);}return x.slice(L1);}function dropLast(N1,x){if(arguments.length===1){return O1=>dropLast(N1,O1);}return x.slice(0,-N1);}function either(x,y){if(arguments.length===1){return P1=>either(x,P1);}return Q1=>x(Q1)||y(Q1);}function endsWith(R1,S1){if(arguments.length===1){return T1=>endsWith(R1,T1);}return S1.endsWith(R1);}function F(){return!1;}function find(fn,V1){if(arguments.length===1){return W1=>find(fn,W1);}return V1.find(fn);}function findIndex(fn,Y1){if(arguments.length===1){return Z1=>findIndex(fn,Z1);}const a2=Y1.length;let b2=-1;while(++b2<a2){if(fn(Y1[b2],b2)){return b2;}}return-1;}function flatten(c2,d2){d2=d2===void 0?[]:d2;for(let i=0;i<c2.length;i++){if(Array.isArray(c2[i])){flatten(c2[i],d2);}else{d2.push(c2[i]);}}return d2;}function flipExport(fn){return(...input)=>{if(input.length===1){return f2=>fn(f2,input[0]);}else if(input.length===2){return fn(input[1],input[0]);}return void 0;};}function flip(fn){return flipExport(fn);}function mapObject(fn,i2){const j2={};for(const k2 in i2){j2[k2]=fn(i2[k2],k2);}return j2;}function map(fn,m2){if(arguments.length===1){return n2=>map(fn,n2);}if(m2===void 0){return[];}if(!Array.isArray(m2)){return mapObject(fn,m2);}let o2=-1;const p2=m2.length,q2=Array(p2);while(++o2<p2){q2[o2]=fn(m2[o2],o2);}return q2;}function forEach(fn,s2){if(arguments.length===1){return t2=>forEach(fn,t2);}map(fn,s2);return s2;}function groupBy(fn,v2){if(arguments.length===1){return w2=>groupBy(fn,w2);}const x2={};for(let i=0;i<v2.length;i++){const y2=v2[i],z2=fn(y2);if(!x2[z2]){x2[z2]=[];}x2[z2].push(y2);}return x2;}function has(A2,B2){if(arguments.length===1){return C2=>has(A2,C2);}return B2[A2]!==void 0;}function head(a){if(typeof a==='string'){return a[0]||'';}return a[0];}function identity(x){return x;}function ifElse(D2,E2,F2){if(E2===void 0){return(G2,H2)=>ifElse(D2,G2,H2);}else if(F2===void 0){return I2=>ifElse(D2,E2,I2);}return J2=>{const K2=typeof D2==='boolean'?D2:D2(J2);if(K2===!0){return E2(J2);}return F2(J2);};}const inc=x=>x+1;function includes(L2,M2){if(arguments.length===1){return N2=>includes(L2,N2);}const ok=Array.isArray(M2)||typeof M2==='string';if(!ok)return!1;return M2.includes(L2);}function indexBy(fn,Q2){if(arguments.length===1){return R2=>indexBy(fn,R2);}const S2={};for(let i=0;i<Q2.length;i++){const T2=Q2[i];S2[fn(T2)]=T2;}return S2;}function indexOf(x,U2){if(arguments.length===1){return V2=>indexOf(x,V2);}let W2=-1;const X2=U2.length;while(++W2<X2){if(U2[W2]===x){return W2;}}return-1;}function baseSlice(Y2,Z2,a3){let b3=-1,c3=Y2.length;a3=a3>c3?c3:a3;if(a3<0){a3+=c3;}c3=Z2>a3?0:a3-Z2>>>0;Z2>>>=0;const d3=Array(c3);while(++b3<c3){d3[b3]=Y2[b3+Z2];}return d3;}function init(a){if(typeof a==='string'){return a.slice(0,-1);}return a.length?baseSlice(a,0,-1):[];}function is(e3,x){if(arguments.length===1){return f3=>is(e3,f3);}return x!=null&&x.constructor===e3||x instanceof e3;}function isNil(x){return x===void 0||x===null;}function join(g3,h3){if(arguments.length===1){return i3=>join(g3,i3);}return h3.join(g3);}function keys(x){return Object.keys(x);}function last(a){if(typeof a==='string'){return a[a.length-1]||'';}return a[a.length-1];}function lastIndexOf(x,j3){if(arguments.length===1){return k3=>lastIndexOf(x,k3);}let l3=-1;j3.map((m3,n3)=>{if(equals(m3,x)){l3=n3;}});return l3;}function length(x){return x.length;}function match(o3,x){if(arguments.length===1){return p3=>match(o3,p3);}const q3=x.match(o3);return q3===null?[]:q3;}function merge(r3,s3){if(arguments.length===1){return t3=>merge(r3,t3);}return Object.assign({},r3||{},s3||{});}function max(x,y){if(arguments.length===1){return u3=>max(x,u3);}return y>x?y:x;}function maxBy(fn,x,y){if(arguments.length===2){return w3=>maxBy(fn,x,w3);}else if(arguments.length===1){return(x3,y3)=>maxBy(fn,x3,y3);}return fn(y)>fn(x)?y:x;}function min(x,y){if(arguments.length===1){return z3=>min(x,z3);}return y<x?y:x;}function minBy(fn,x,y){if(arguments.length===2){return B3=>minBy(fn,x,B3);}else if(arguments.length===1){return(C3,D3)=>minBy(fn,C3,D3);}return fn(y)<fn(x)?y:x;}function modulo(x,y){if(arguments.length===1)return E3=>modulo(x,E3);return x%y;}function multiply(x,y){if(arguments.length===1)return F3=>multiply(x,F3);return x*y;}function none(fn,H3){if(arguments.length===1)return I3=>none(fn,I3);return H3.filter(fn).length===0;}function not(x){return!x;}function nth(J3,K3){if(arguments.length===1)return L3=>nth(J3,L3);const M3=J3<0?K3.length+J3:J3;return Object.prototype.toString.call(K3)==='[object String]'?K3.charAt(M3):K3[M3];}function omit(N3,O3){if(arguments.length===1){return P3=>omit(N3,P3);}if(O3===null||O3===void 0){return void 0;}const Q3=typeof N3==='string'?N3.split(','):N3,R3={};for(const S3 in O3){if(!Q3.includes(S3)){R3[S3]=O3[S3];}}return R3;}function partialCurry(fn,U3={}){return V3=>{if(type(fn)==='Async'||type(fn)==='Promise'){return new Promise((W3,X3)=>{fn(merge(V3,U3)).then(W3).catch(X3);});}return fn(merge(V3,U3));};}function path(Y3,Z3){if(arguments.length===1){return a4=>path(Y3,a4);}if(Z3===null||Z3===void 0){return void 0;}let b4=Z3,c4=0;const d4=typeof Y3==='string'?Y3.split('.'):Y3;while(c4<d4.length){if(b4===null||b4===void 0){return void 0;}b4=b4[d4[c4]];c4++;}return b4;}function pathOrRaw(e4,f4,g4){return defaultTo(e4,path(f4,g4));}const h4=curry(pathOrRaw);function pick(i4,j4){if(arguments.length===1){return k4=>pick(i4,k4);}if(j4===null||j4===void 0){return void 0;}const l4=typeof i4==='string'?i4.split(','):i4,m4={};let n4=0;while(n4<l4.length){if(l4[n4]in j4){m4[l4[n4]]=j4[l4[n4]];}n4++;}return m4;}function pickAll(o4,p4){if(arguments.length===1){return q4=>pickAll(o4,q4);}if(p4===null||p4===void 0){return void 0;}const r4=typeof o4==='string'?o4.split(','):o4,s4={};let t4=0;while(t4<r4.length){if(r4[t4]in p4){s4[r4[t4]]=p4[r4[t4]];}else{s4[r4[t4]]=void 0;}t4++;}return s4;}function pipe(...fns){return compose(...fns.reverse());}function pluck(u4,v4){if(arguments.length===1)return w4=>pluck(u4,w4);const x4=[];map(y4=>{if(!(y4[u4]===void 0)){x4.push(y4[u4]);}},v4);return x4;}function prepend(x,z4){if(arguments.length===1)return A4=>prepend(x,A4);if(typeof z4==='string'){return`${x}${z4}`;}const B4=z4.concat();B4.unshift(x);return B4;}function prop(C4,D4){if(arguments.length===1)return E4=>prop(C4,E4);return D4[C4];}function propEq(F4,x,G4){if(x===void 0){return(H4,I4)=>propEq(F4,H4,I4);}else if(G4===void 0){return J4=>propEq(F4,x,J4);}return G4[F4]===x;}function range(K4,L4){if(arguments.length===1)return M4=>range(K4,M4);const N4=[];for(let i=K4;i<L4;i++){N4.push(i);}return N4;}function reduce(fn,P4,Q4){if(P4===void 0){return(R4,S4)=>reduce(fn,R4,S4);}else if(Q4===void 0){return T4=>reduce(fn,P4,T4);}return Q4.reduce(fn,P4);}function reject(fn,V4){if(arguments.length===1)return W4=>reject(fn,W4);return filter((x,i)=>!fn(x,i),V4);}function repeat(x,X4){if(arguments.length===1){return Y4=>repeat(x,Y4);}const Z4=Array(X4);return Z4.fill(x);}function replace(a5,b5,c5){if(b5===void 0){return(d5,e5)=>replace(a5,d5,e5);}else if(c5===void 0){return f5=>replace(a5,b5,f5);}return c5.replace(a5,b5);}function reverse(g5){const h5=g5.concat();return h5.reverse();}function sort(fn,j5){if(arguments.length===1)return k5=>sort(fn,k5);const l5=j5.concat();return l5.sort(fn);}function sortBy(fn,n5){if(arguments.length===1){return o5=>sortBy(fn,o5);}const p5=n5.concat();return p5.sort((a,b)=>{const q5=fn(a),r5=fn(b);return q5<r5?-1:q5>r5?1:0;});}function split(s5,t5){if(arguments.length===1)return u5=>split(s5,u5);return t5.split(s5);}function splitEvery(v5,x){if(arguments.length===1)return w5=>splitEvery(v5,w5);const x5=v5>1?v5:1,y5=[];let z5=0;while(z5<x.length){y5.push(x.slice(z5,z5+=x5));}return y5;}function startsWith(x,y){if(arguments.length===1)return A5=>startsWith(x,A5);return y.startsWith(x);}function subtract(x,y){if(arguments.length===1)return B5=>subtract(x,B5);return x-y;}function T(){return!0;}function tail(C5){return drop(1,C5);}function take(D5,x){if(arguments.length===1)return E5=>take(D5,E5);if(typeof x==='string'){return x.slice(0,D5);}return baseSlice(x,0,D5);}function takeLast(F5,x){if(arguments.length===1)return G5=>takeLast(F5,G5);const H5=x.length;let I5=F5>H5?H5:F5;if(typeof x==='string'){return x.slice(H5-I5);}I5=H5-I5;return baseSlice(x,I5,H5);}function tap(fn,x){if(arguments.length===1)return K5=>tap(fn,K5);fn(x);return x;}function test(L5,M5){if(arguments.length===1)return N5=>test(L5,N5);return M5.search(L5)!==-1;}function times(fn,P5){if(arguments.length===1)return Q5=>times(fn,Q5);return map(fn,range(0,P5));}function toLower(x){return x.toLowerCase();}function toString(x){return x.toString();}function toUpper(x){return x.toUpperCase();}function trim(R5){return R5.trim();}function uniq(S5){let T5=-1;const U5=[];while(++T5<S5.length){const V5=S5[T5];if(!contains(V5,U5)){U5.push(V5);}}return U5;}function uniqWith(fn,X5){if(arguments.length===1)return Y5=>uniqWith(fn,Y5);let Z5=-1;const a6=X5.length,b6=[];while(++Z5<a6){const c6=X5[Z5],d6=any(e6=>fn(c6,e6),b6);if(!d6){b6.push(c6);}}return b6;}function update(f6,g6,h6){if(g6===void 0){return(i6,j6)=>update(f6,i6,j6);}else if(h6===void 0){return k6=>update(f6,g6,k6);}const l6=h6.concat();return l6.fill(g6,f6,f6+1);}function values(m6){const n6=[];for(const o6 in m6){n6.push(m6[o6]);}return n6;}function without(p6,q6){return reduce((r6,s6)=>!contains(s6,p6)?r6.concat(s6):r6,[],q6);}function zipObj(x,y){if(arguments.length===1)return t6=>zipObj(x,t6);return x.reduce((u6,v6,i)=>{u6[v6]=y[i];return u6;},{});}export{add,l as adjust,all,allPass,always,any,anyPass,append,X as assoc,both,complement,compose,concat,contains,curry,dec,defaultTo,dissoc,divide,drop,dropLast,either,endsWith,equals,F,filter,find,findIndex,flatten,flip,forEach,groupBy,has,head,identity,ifElse,inc,includes,indexBy,indexOf,init,is,isNil,join,keys,last,lastIndexOf,length,map,match,merge,max,maxBy,min,minBy,modulo,multiply,none,not,nth,omit,partialCurry,path,h4 as pathOr,pick,pickAll,pipe,pluck,prepend,prop,propEq,range,reduce,reject,repeat,replace,reverse,sort,sortBy,split,splitEvery,startsWith,subtract,T,tail,take,takeLast,tap,test,times,toLower,toString,toUpper,trim,type,uniq,uniqWith,update,values,without,zipObj};